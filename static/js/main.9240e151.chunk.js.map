{"version":3,"sources":["reportWebVitals.js","constants.js","reducers.js","components/Cards/Card.jsx","components/Cards/CardList.jsx","components/SearchBox/SearchBox.jsx","components/Scroll/Scroll.jsx","components/ErrorBoundry/ErrorBoundry.jsx","components/Header/Header.jsx","containers/App/App.jsx","actions.js","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchfield","initialStateRobots","isPending","robots","error","Card","name","email","id","className","alt","src","Cardlist","map","user","i","SearchBox","searchChange","style","boxShadow","position","zIndex","type","placeholder","onChange","Scroll","props","overflowY","height","children","ErrorBoundry","state","hasError","info","this","setState","Component","Header","nextProps","nextState","connect","searchRobots","requestRobots","dispatch","onSearchChange","event","text","target","value","payload","onRequestRobots","fetch","response","json","data","catch","useEffect","filteredRobots","filter","robot","toLowerCase","includes","CardList","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9240e151.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import {\n    CHANGE_SEARCHFIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from './constants'\n\nconst initialStateSearch = {\n    searchfield: ''\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n    switch (action.type) {\n        case CHANGE_SEARCHFIELD:\n            return Object.assign({}, state, {searchfield: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialStateRobots = {\n    isPending: false,\n    robots: [],\n    error: ''\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n    switch(action.type) {\n        case REQUEST_ROBOTS_PENDING:\n            return Object.assign({}, state, {isPending: true});\n        case REQUEST_ROBOTS_SUCCESS:\n            return Object.assign({}, state, {robots: action.payload, isPending: false});\n        case REQUEST_ROBOTS_FAILED:\n            return Object.assign({}, state, {error: action.payload, isPending: false})\n        default:\n            return state;\n\n    }\n}","import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src ={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ({robots}) => {\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card\n                            key={robots[i].id}\n                            id={robots[i].id}\n                            name={robots[i].name}\n                            email={robots[i].email}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default Cardlist;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div\n            className='pa2'\n            style={{\n                boxShadow: '0 15px 15px #222',\n                position: 'relative',\n                zIndex: '1'\n            }}\n        >\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oops. That is not good.</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\n\nclass Header extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return false;\n    }\n    render() {\n        return <h1 className='f1'>RoboFriends</h1>\n    }\n}\n\nexport default Header;","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux'\nimport {setSearchfield, requestRobots} from '../../actions'\n\nimport CardList from '../../components/Cards/CardList';\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport Scroll from '../../components/Scroll/Scroll'\nimport ErrorBoundry from '../../components/ErrorBoundry/ErrorBoundry';\nimport Header from '../../components/Header/Header';\n\nimport './App.css'\n\nconst mapStateToProps = state => {\n    return {\n        searchfield: state.searchRobots.searchfield,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        error: state.requestRobots.error\n    }\n}\n\nconst mapDispatchToProps = dispatch =>  {\n    return {\n        onSearchChange: event => dispatch(setSearchfield(event.target.value)),\n        onRequestRobots: () => dispatch(requestRobots())\n    }\n}\n\nfunction App(props) {\n    const {\n        searchfield,\n        onSearchChange,\n        onRequestRobots,\n        robots,\n        isPending\n    } = props;\n\n    useEffect(() => {\n            onRequestRobots()\n        }, [])\n\n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(\n            searchfield.toLowerCase()\n        );\n    })\n\n    if (isPending)\n        return (\n            <div className='tc'>\n                <Header/>\n                <h1>Loading...</h1>\n            </div>\n        );\n    else\n        return (\n            <div className='tc'>\n                <Header/>\n                <SearchBox searchChange={onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\n    CHANGE_SEARCHFIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from './constants'\n\nexport const setSearchfield = (text) => ({\n    type: CHANGE_SEARCHFIELD,\n    payload: text\n});\n\nexport const requestRobots = () => (dispatch) => {\n    dispatch({type: REQUEST_ROBOTS_PENDING});\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))\n        .catch(error => dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport {searchRobots, requestRobots} from './reducers'\nimport App from './containers/App/App'\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}